/**
 * syntax = "proto3"은 Protobuf의 문법 버전을 정의합니다.
 * 여기서는 proto3 문법을 사용합니다.
 */
syntax = "proto3";

/**
 * 생성될 Java 코드의 패키지 경로를 지정합니다.
 * Java에서 이 proto 파일을 컴파일하면 해당 경로로 클래스가 생성됩니다.
 */
option java_package = "com.example.demogrpc";

/**
 * 생성될 Java 클래스의 이름을 지정합니다.
 * 모든 메시지와 서비스 정의가 포함된 외부 클래스로 `MemberProto`가 생성됩니다.
 */
option java_outer_classname = "MemberProto";

/**
 * `MemberService`라는 grpc 인터페이스를 정의합니다.
 * 서비스에는 CreateMember 메서드가 포함되어 있습니다.
 * CreateMember 메서드는 `MemberRequest` 메시지를 받고 `MemberCreateResponse` 메시지를 반환합니다.
 */
service MemberService {
  rpc CreateMember (MemberRequest) returns (MemberCreateResponse);
}

/**
 * 요청 메시지 구조를 정의합니다.
 * `MemberRequest` 메시지에는 멤버 생성 요청에 필요한 데이터들을 포함합니다.
 * 메시지의 바이너리 형식에서 필드를 구별하는데 사용할 필드 번호를 정의합니다.
 */
message MemberRequest {
  int64 id = 1;
  string email = 2;
  string password = 3;
  string name = 4;
}

/**
 * 응답 메시지 구조를 정의합니다.
 * `MemberCreateResponse`에는 멤버 생성 응답에 필요한 데이터들을 포함합니다.
 * 메시지의 바이너리 형식에서 필드를 구별하는데 사용할 필드 번호를 정의합니다.
 */
message MemberCreateResponse {
  int64 id = 1;
  string email = 2;
  string password = 3;
  string name = 4;
}